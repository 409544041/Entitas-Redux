//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v1.2.0, branch:develop).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestContext {

    public TestEntity UniqueEventEntity { get { return GetGroup(TestMatcher.UniqueEvent).GetSingleEntity(); } }
    public EntitasRedux.Tests.UniqueEventComponent UniqueEvent { get { return UniqueEventEntity.UniqueEvent; } }
    public bool hasUniqueEvent { get { return UniqueEventEntity != null; } }

    public TestEntity SetUniqueEvent(string newValue) {
        if (hasUniqueEvent) {
            throw new JCMG.EntitasRedux.EntitasReduxException("Could not set UniqueEvent!\n" + this + " already has an entity with EntitasRedux.Tests.UniqueEventComponent!",
                "You should check if the context already has a UniqueEventEntity before setting it or use context.ReplaceUniqueEvent().");
        }
        var entity = CreateEntity();
        entity.AddUniqueEvent(newValue);
        return entity;
    }

    public void ReplaceUniqueEvent(string newValue) {
        var entity = UniqueEventEntity;
        if (entity == null) {
            entity = SetUniqueEvent(newValue);
        } else {
            entity.ReplaceUniqueEvent(newValue);
        }
    }

    public void RemoveUniqueEvent() {
        UniqueEventEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v1.2.0, branch:develop).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public EntitasRedux.Tests.UniqueEventComponent UniqueEvent { get { return (EntitasRedux.Tests.UniqueEventComponent)GetComponent(TestComponentsLookup.UniqueEvent); } }
    public bool hasUniqueEvent { get { return HasComponent(TestComponentsLookup.UniqueEvent); } }

    public void AddUniqueEvent(string newValue) {
        var index = TestComponentsLookup.UniqueEvent;
        var component = (EntitasRedux.Tests.UniqueEventComponent)CreateComponent(index, typeof(EntitasRedux.Tests.UniqueEventComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUniqueEvent(string newValue) {
        var index = TestComponentsLookup.UniqueEvent;
        var component = (EntitasRedux.Tests.UniqueEventComponent)CreateComponent(index, typeof(EntitasRedux.Tests.UniqueEventComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUniqueEvent() {
        RemoveComponent(TestComponentsLookup.UniqueEvent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v1.2.0, branch:develop).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TestMatcher {

    static JCMG.EntitasRedux.IMatcher<TestEntity> _matcherUniqueEvent;

    public static JCMG.EntitasRedux.IMatcher<TestEntity> UniqueEvent {
        get {
            if (_matcherUniqueEvent == null) {
                var matcher = (JCMG.EntitasRedux.Matcher<TestEntity>)JCMG.EntitasRedux.Matcher<TestEntity>.AllOf(TestComponentsLookup.UniqueEvent);
                matcher.ComponentNames = TestComponentsLookup.ComponentNames;
                _matcherUniqueEvent = matcher;
            }

            return _matcherUniqueEvent;
        }
    }
}
