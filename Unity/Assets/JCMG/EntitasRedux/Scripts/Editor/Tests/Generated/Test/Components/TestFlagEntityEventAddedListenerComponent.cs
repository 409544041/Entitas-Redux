//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v1.2.1, branch:develop).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public FlagEntityEventAddedListenerComponent FlagEntityEventAddedListener { get { return (FlagEntityEventAddedListenerComponent)GetComponent(TestComponentsLookup.FlagEntityEventAddedListener); } }
    public bool HasFlagEntityEventAddedListener { get { return HasComponent(TestComponentsLookup.FlagEntityEventAddedListener); } }

    public void AddFlagEntityEventAddedListener(System.Collections.Generic.List<IFlagEntityEventAddedListener> newValue) {
        var index = TestComponentsLookup.FlagEntityEventAddedListener;
        var component = (FlagEntityEventAddedListenerComponent)CreateComponent(index, typeof(FlagEntityEventAddedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFlagEntityEventAddedListener(System.Collections.Generic.List<IFlagEntityEventAddedListener> newValue) {
        var index = TestComponentsLookup.FlagEntityEventAddedListener;
        var component = (FlagEntityEventAddedListenerComponent)CreateComponent(index, typeof(FlagEntityEventAddedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

	public void CopyFlagEntityEventAddedListenerTo(FlagEntityEventAddedListenerComponent copyComponent) {
        var index = TestComponentsLookup.FlagEntityEventAddedListener;
        var component = (FlagEntityEventAddedListenerComponent)CreateComponent(index, typeof(FlagEntityEventAddedListenerComponent));
        component.value = copyComponent.value;
        ReplaceComponent(index, component);
    }

    public void RemoveFlagEntityEventAddedListener() {
        RemoveComponent(TestComponentsLookup.FlagEntityEventAddedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v1.2.1, branch:develop).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TestMatcher {

    static JCMG.EntitasRedux.IMatcher<TestEntity> _matcherFlagEntityEventAddedListener;

    public static JCMG.EntitasRedux.IMatcher<TestEntity> FlagEntityEventAddedListener {
        get {
            if (_matcherFlagEntityEventAddedListener == null) {
                var matcher = (JCMG.EntitasRedux.Matcher<TestEntity>)JCMG.EntitasRedux.Matcher<TestEntity>.AllOf(TestComponentsLookup.FlagEntityEventAddedListener);
                matcher.ComponentNames = TestComponentsLookup.ComponentNames;
                _matcherFlagEntityEventAddedListener = matcher;
            }

            return _matcherFlagEntityEventAddedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v1.2.1, branch:develop).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TestEntity {

    public void AddFlagEntityEventAddedListener(IFlagEntityEventAddedListener value) {
        var listeners = HasFlagEntityEventAddedListener
            ? FlagEntityEventAddedListener.value
            : new System.Collections.Generic.List<IFlagEntityEventAddedListener>();
        listeners.Add(value);
        ReplaceFlagEntityEventAddedListener(listeners);
    }

    public void RemoveFlagEntityEventAddedListener(IFlagEntityEventAddedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = FlagEntityEventAddedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFlagEntityEventAddedListener();
        } else {
            ReplaceFlagEntityEventAddedListener(listeners);
        }
    }
}
